home = as.character(home),
match_date = as.character(date),
visitor = as.character(visitor)
) %>%
filter(
division == 1,
season == 2015
)
head(raw_data)
data <- season %>%
mutate(
"opponent" = as.character(opponent)
) %>%
select(
match_date_char,
"team" = team_char,
"team_points_before_match" = total_points_before_match,
"team_points_after_match" = total_points_after_match,
opponent,
result,
team_played_on_match_date
)
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
head(season)
print(format(Sys.time(), "%a %b %d %X %Y"))
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
head(season)
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
print(
format(Sys.time(), "%a %b %d %X %Y"),
head(season)
)
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
print(
format(Sys.time(), "%a %b %d %X %Y")
)
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
print(format(Sys.time(), "%a %b %d %X %Y"))
print(head(season))
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
dt <- format(Sys.time(), "%a %b %d %X %Y"))
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
dt <- format(Sys.time(), "%a %b %d %X %Y")
h_season <- head(season)
print(dt, season)
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
dt <- format(Sys.time(), "%a %b %d %X %Y")
h_season <- head(season)
print(dt, h_season)
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
dt <- format(Sys.time(), "%a %b %d %X %Y")
h_season <- head(season)
print(h_season)
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
dt <- format(Sys.time(), "%a %b %d %X %Y")
h_season <- head(season)
print(c(dt, h_season))
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
print(c(format(Sys.time(), "%a %b %d %X %Y"), head(season))
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
formatted_date <- format(Sys.time(), "%a %b %d %X %Y")
print(c(formatted_date, head(season))
season <- soccr::seasons %>%
filter(
division == 1,
season_start_year == 2015
) %>%
replace_na(
list(
total_points_before_match = 0,
total_points_after_match = 0
)
)
formatted_date <- format(Sys.time(), "%a %b %d %X %Y")
head_season <- head(season)
print(c(formatted_date, head_season))
raw_data <- engsoccerdata::england
names(raw_data) <- str_to_lower(names(raw_data))
raw_data <- raw_data %>%
mutate(
division = as.character(division),
home = as.character(home),
match_date = as.character(date),
visitor = as.character(visitor)
) %>%
filter(
division == 1,
season == 2015
)
formatted_date <- format(Sys.time(), "%a %b %d %X %Y")
head_raw_data <- head(raw_date)
raw_data <- engsoccerdata::england
names(raw_data) <- str_to_lower(names(raw_data))
raw_data <- raw_data %>%
mutate(
division = as.character(division),
home = as.character(home),
match_date = as.character(date),
visitor = as.character(visitor)
) %>%
filter(
division == 1,
season == 2015
)
formatted_date <- format(Sys.time(), "%a %b %d %X %Y")
head_raw_data <- head(raw_data)
print(c(formatted_date, head_raw_data))
data <- season %>%
mutate(
"opponent" = as.character(opponent)
) %>%
select(
match_date_char,
"team" = team_char,
"team_points_before_match" = total_points_before_match,
"team_points_after_match" = total_points_after_match,
opponent,
result,
team_played_on_match_date
)
data <- season %>%
mutate(
"opponent" = as.character(opponent),
"match_date_char" = as.character(match_date)
) %>%
select(
"team" = team_char,
"team_points_before_match" = total_points_before_match,
"team_points_after_match" = total_points_after_match,
opponent,
result,
team_played_on_match_date
)
data <- season %>%
mutate(
"opponent" = as.character(opponent),
"match_date_char" = as.character(match_date),
"team" = as.character(team_char)
) %>%
select(
"team_points_before_match" = total_points_before_match,
"team_points_after_match" = total_points_after_match,
opponent,
result,
team_played_on_match_date
)
data <- season %>%
mutate(
"opponent" = as.character(opponent),
"match_date_char" = as.character(match_date),
"team" = as.character(team)
) %>%
select(
"team_points_before_match" = total_points_before_match,
"team_points_after_match" = total_points_after_match,
opponent,
result,
team_played_on_match_date
)
library(dplyr)
library(engsoccerdata)
library(ggplot2)
library(magrittr)
library(soccr)
library(stringr)
library(tidyr)
devtools::document()
install.packages('islr')
install.packages('ISLR')
library(ISLR)
help(ISLR)
??ISLR
ISRL.version
ISRL::version
default <- ISRL::default
default <- ISRL::Default
def <- ISLR::Default
def.summary()
def.summary
summary(def)
Auto=read.table("~/Downloads/Advertising.csv")
Advertising<-read.table("~/Downloads/Advertising.csv")
View(Advertising)
Advertising<-read.csv("~/Downloads/Advertising.csv", header=TRUE)
fix(Advertising)
install.packages('XQuartz')
fix(Advertising)
plot(Advertising$TV, Advertising$sales)
plot(Advertising$radio, Advertising$sales)
plot(Advertising$newspaper, Advertising$sales)
plot(Advertising$newspaper, Advertising$radio)
plot(Advertising$newspaper, Advertising$TV)
x <- (1, 3, 0)
x
x <- c(1, 3, 0)
x <- c(1, 3, 0)
x
type(x)
typeof(x)
x <- c(1, 3, 0)
y <- c(4, 2, 5)
z <- x + y
z
ls()
x <- c(1, 3, 0)
y <- c(4, 2, 5)
z <- x + y
z
ls()
rm('y')
ls()
x <- c(1, 3, 0)
y <- c(4, 2, 5)
z <- x + y
z
rm(list=ls())
ls()
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
install.packages("devtools")
install.packages("packrat")
devtools::create("/Users/joestrachan/Documents/study/dsti/courses/practical-introduction-to-data-science/tutorials/tutorial-3/weathr")
packrat::init("/Users/joestrachan/Documents/study/dsti/courses/practical-introduction-to-data-science/tutorials/tutorial-3/weathr")
install.packages('curl')
packrat::snapshot()
devtools::use_data_raw()
install.packages('devtools')
packrat::snapshot()
packrat::snapshot()
devtools::use_data_raw()
install.packages('usethis')
packrat::snapshot()
devtools::check()
devtools::use_data_raw()
library(curl)
weather.stations <- list("lerwich", "nairn")
for(weather.station in weather.stations){
print(weather.station)
}
library(curl)
## CONSTANTS
met.office.address.root <- "http://www.metoffice.gov.uk/pub/data/weather/uk/climate/stationdata/"
met.office.address.suffix <- "data.txt"
## LOCAL ADDESS
local.address <- "./tmp.txt"
## WEATHER STATIONS
weather.stations <- list("lerwich", "nairn")
for(weather.station in weather.stations){
met.office.weather.station.address <- paset(
met.office.address.root,
weather.station,
met.office.address.suffix
)
curl_download(met.office.weather.station.address, local.address)
}
library(curl)
## CONSTANTS
met.office.address.root <- "http://www.metoffice.gov.uk/pub/data/weather/uk/climate/stationdata/"
met.office.address.suffix <- "data.txt"
## LOCAL ADDESS
local.address <- "./tmp.txt"
## WEATHER STATIONS
weather.stations <- list("lerwich", "nairn")
for(weather.station in weather.stations){
met.office.weather.station.address <- paste(
met.office.address.root,
weather.station,
met.office.address.suffix
)
curl_download(met.office.weather.station.address, local.address)
}
library(curl)
library(curl)
## CONSTANTS
met.office.address.root <- "http://www.metoffice.gov.uk/pub/data/weather/uk/climate/stationdata/"
met.office.address.suffix <- "data.txt"
## LOCAL ADDESS
local.address <- "./tmp.txt"
## WEATHER STATIONS
weather.stations <- list("lerwich", "nairn")
for(weather.station in weather.stations){
met.office.weather.station.address <- paste(
met.office.address.root,
weather.station,
met.office.address.suffix
)
print(met.office.weather.station.address)
curl_download(met.office.weather.station.address, local.address)
}
library(curl)
## CONSTANTS
met.office.address.root <- "http://www.metoffice.gov.uk/pub/data/weather/uk/climate/stationdata/"
met.office.address.suffix <- "data.txt"
## LOCAL ADDESS
local.address <- "./tmp.txt"
## WEATHER STATIONS
weather.stations <- list("lerwich", "nairn")
for(weather.station in weather.stations){
met.office.weather.station.address <- paste(
met.office.address.root,
weather.station,
met.office.address.suffix,
sep=""
)
print(met.office.weather.station.address)
curl_download(met.office.weather.station.address, local.address)
}
library(curl)
## CONSTANTS
met.office.address.root <- "http://www.metoffice.gov.uk/pub/data/weather/uk/climate/stationdata/"
met.office.address.suffix <- "data.txt"
## LOCAL ADDESS
local.address <- "./tmp.txt"
## WEATHER STATIONS
weather.stations <- list("lerwick", "nairn")
for(weather.station in weather.stations){
met.office.weather.station.address <- paste(
met.office.address.root,
weather.station,
met.office.address.suffix,
sep=""
)
print(met.office.weather.station.address)
curl_download(met.office.weather.station.address, local.address)
}
library(curl)
## CONSTANTS
met.office.address.root <- "http://www.metoffice.gov.uk/pub/data/weather/uk/climate/stationdata/"
met.office.address.suffix <- "data.txt"
## LOCAL ADDESS
local.address <- "./data-raw/tmp.txt"
## WEATHER STATIONS
weather.stations <- list("lerwick", "nairn")
for(weather.station in weather.stations){
met.office.weather.station.address <- paste(
met.office.address.root,
weather.station,
met.office.address.suffix,
sep=""
)
print(met.office.weather.station.address)
curl_download(met.office.weather.station.address, local.address)
}
devtools::document()
install.packages("testthat")
install.packages("usethis")
usethis::use_test("name")
usethis::use_test("load-raw-data")
devtools::document()
devtools::document()
devtools::test()
devtools::test()
devtools::document()
devtools::test()
devtools::document()
devtools::test()
devtools::document()
devtools::test()
usethis::use_test("name")
devtools::document()
devtools::test()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
install.packages("lintr")
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
usethis::use_test("generate-weather-station-url")
devtools::document()
devtools::test()
devtools::test()
devtools::test_coverage()
devtools::test_coverage()
install.package('htmltools')
install.packages('htmltools')
devtools::test_coverage()
install.packages('DT')
devtools::test_coverage()
install.packages('knitr')
packrat::snapshot()
install.packages('knitr', dependencies = TRUE)
install.packages('rmarkdown')
install.packages('rmarkdown')
install.packages('Rmarkdown')
install.packages('rmarkdown')
install.packages('knitr')
